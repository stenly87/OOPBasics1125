namespace OOPBasics
{
    internal class Program
    {
        
        static void Main(string[] args)
        {
            // основы ООП (объектно-ориентированное программирование)
            // у каждого класса выделяется состояние и поведение
            // состояние это значения полей и свойств
            // поведение это работа методов, конструкторов и тд
            // абстрагирование (абстракция) - отбрасывание лишних
            // свойств или поведения объектов при его проектировании

            BadHuman human = new BadHuman { Name = "Валера" };
            Table table = new Table();
            human.Kick(table);

            // принципы ООП:
            // 0. Абстракция
            // 1. Инкапсуляция - объединение кода и данных
            // часто описывается как сокрытие данных
            // Состояние объекта изменяется изнутри объекта

            // наверное это плохо для объекта
            // мы в любой момент можем поменять это свойство
            table.Width = 100;
            // такое поведение будет нормальным для DTO
            // когда нужно получить/отправить данные в БД
            // Для объектов с определенным поведением
            // может быть важно отслеживание изменения состояния
            // для инкапсуляции важно, чтобы действия над 
            // объектом не выносились наружу. Поскольку внутри
            // объекта действия проще отследить.
            // В идеале класс должен решать одну задачу,
            // соответственно, состояние соответствует задаче,
            // поведение решает одну задачу, значит проще 
            // определить проблему (если она есть)


        }
    }
}